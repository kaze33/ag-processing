# -*- coding: utf-8 -*-
"""Antigen_processing_NetMHCpan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uKPkSA34o868AtUYZ0fvulH8IhWGIa5F

## NetMHCpan 4.1 to total hits.

**Part 1:** Run the code and upload NetMHCpan4.1 output as your input.
"""

from google.colab import files
import pandas as pd
uploaded = files.upload()

"""**Part 2:** Run the code and the results will be downloaded automatically."""

# Uploaded file name fetching
filename = list(uploaded.keys())[0]

#Extract lines ending with <= WB or <= SB
with open(filename, 'r') as f:
    lines = f.readlines()
filtered_lines = [line.strip() for line in lines if line.strip().endswith('<= WB') or line.strip().endswith('<= SB')]

#Clean and parse each line
processed_rows = []
for line in filtered_lines:
    parts = line.strip().split()
    #Check if last two elements are ['<=', 'WB'] or ['<=', 'SB'] and join in one column
    if parts[-2:] == ['<=', 'WB'] or parts[-2:] == ['<=', 'SB']:
        parts = parts[:-2] + ['<= ' + parts[-1]]
    processed_rows.append(parts)

#Define column names (now 14 columns total)
columns = [
    "Pos", "Allele", "Core", "Of", "Gp", "Gl", "Ip", "Il",
    "Ref", "Peptide", "Gene", "Score1", "Score2", "Bind"
]

#Create DataFrame, convert scores and count hits
df = pd.DataFrame(processed_rows, columns=columns)
df["Score1"] = pd.to_numeric(df["Score1"], errors='coerce')
df["Score2"] = pd.to_numeric(df["Score2"], errors='coerce')
hit_counts = df["Gene"].value_counts().reset_index()
hit_counts.columns = ["Gene", "Hit_Count"]

#Save and download
output_filename = "peptide_hit_counts.csv"
hit_counts.to_csv(output_filename, index=False)
files.download(output_filename)
print("Hit counts saved to:", output_filename)